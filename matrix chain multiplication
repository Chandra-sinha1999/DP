int help(vector<int> &A,vector<vector<int> >& dp,int i,int j){
    if(i >= j) return 0;
    if(dp[i][j] != -1) return dp[i][j];
    int ans = INT_MAX;
    for(int k = i; k < j; k++){
        int temp = help(A,dp,i,k) + help(A,dp,k+1,j) + (A[i-1] * A[j] * A[k]);
        ans = min(temp,ans);
    }
    return dp[i][j] = ans;
}
int Solution::solve(vector<int> &A) {
    int n = A.size();
    vector<vector<int> > dp(n,vector<int> (n));
    for(int i = 0; i < n; i++){
        for(int j = 0;j < n; j++){
            dp[i][j] = -1;
        }
    }
    return help(A,dp,1,n-1);
}
